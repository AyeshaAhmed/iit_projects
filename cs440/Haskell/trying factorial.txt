> 4 begin dup .S dup 1 > if rot swap 1 - else exit then again
4 4 
4 3 3 
3 4 2 2 
2 2 3 3 3 
3 3 3 2 1 1 


> 4 begin dup .S dup 1 > if swap rot 1 - else exit then again
4 4 
4 3 3 
3 3 3 3 
3 3 3 2 2 
2 2 3 3 2 2 
2 2 3 3 2 1 1 


4 begin dup .S dup 1 > if swap rot * 1 - else exit then again
not work

4 begin dup .S dup 1 > if swap * rot 1 - else exit then again
not work

4 begin dup .S dup 1 > if swap rot 1 - * else exit then again
not work

4 begin dup .S dup 1 > if * swap rot 1 - else exit then again
not work

4 begin dup . dup 1 > if swap (rot *) 1 - else exit then again
not work

4 begin dup . dup 1 > if rot * 1 - else exit then again




http://bit.ly/1WIEdqY


: factorial dup 1 == if 1 * else dup 1 - factorial * then ;


{- some programs -}

-- a recursive factorial
-- : factorial dup 1 == if 1 * else dup 1 - factorial * then ;
-- play with: 6 factorial .S

-- an iterative factorial
-- : fact-helper begin dup 1 == if * exit else dup rot swap * swap 1 - then again ;
-- : factorial 1 swap fact-helper ;
-- play with: 6 factorial .S






